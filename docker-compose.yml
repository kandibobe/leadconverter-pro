services:
  db:
    image: postgres:15-alpine
    container_name: leadconverter-pro-db-1
    environment:
      POSTGRES_USER: ${DB_USER:-lcp_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-lcp_password}
      POSTGRES_DB: ${DB_NAME:-lcp_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-lcp_user} -d ${DB_NAME:-lcp_db} -h 127.0.0.1 -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: leadconverter-pro-backend-1
    # Запускаем uvicorn по TCP (а не через Unix socket), чтобы порт 8000 реально слушался
    command: ["/bin/sh","-c","/app/backend/scripts/entrypoint.sh && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"]
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    restart: unless-stopped

  frontend:
    build:
      context: .
    # Если у тебя есть отдельный Dockerfile дев-фронта — раскомментируй строку ниже и удали generic build
    #  dockerfile: frontend/Dockerfile.dev
    container_name: leadconverter-pro-frontend-1
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      VITE_API_BASE_URL: http://backend:8000
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
