# docker-compose.yml (ИСПРАВЛЕННАЯ ВЕРСИЯ)

services:
  db:
    image: postgres:15-alpine
    container_name: leadconverter-pro-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: leadconverter-pro-backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: leadconverter-pro-backend-1
    entrypoint: /app/entrypoint.sh
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env # Используем .env файл для переменных окружения
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: leadconverter-pro-frontend
    build:
      context: ./frontend # Контекст - директория frontend
      dockerfile: Dockerfile.dev # Имя файла внутри этой директории
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    env_file:
      - .env # Используем .env файл для переменных окружения

volumes:
  postgres_data: