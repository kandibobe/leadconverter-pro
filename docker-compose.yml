services:
  db:
    image: postgres:15-alpine
    container_name: leadconverter-pro-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-leadconverter}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-leadconverter}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    container_name: leadconverter-pro-backend
    build:
      context: ./backend  # Контекст - директория backend
      dockerfile: Dockerfile # Имя файла внутри этой директории
    command: /app/entrypoint.sh
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env # Используем .env файл для переменных окружения
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: leadconverter-pro-frontend
    build:
      context: ./frontend # Контекст - директория frontend
      dockerfile: Dockerfile.dev # Имя файла внутри этой директории
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    env_file:
      - .env # Используем .env файл для переменных окружения

volumes:
  postgres_data: